1. Create a script file "PasswordToolbox.ps1" containing two functions: 
Get-RandomPassword and Get-PasswordStrength.

2. The function Get-RandomPassword should take one parameter:
-Length, which is an integer to specify the length of the password.
The function should return a string of random characters (letters, numbers, and special characters) with the specified length.
TIP: Get-Random can be used to generate random integers.
TIP: You can cast an integer to a char, which will give the corresponding
ASCII value. Example: [char]72 will result in 'H'. http://www.asciitable.com/

3. The function Get-PasswordStrength should take one parameter:
-Password, which is a required string.
The function will give a certain "score" to a password, depending on the length.
If the password is less than 3 characters, the function should return 0.
If the password is between 3 and 6 characters, it should return 1.
If the password is between 6 and 9 characters, it should return 2.
If the password is between 9 and 12 characters, it should return 3.
If the password is between 12 and 15 characters, it should return 4.
If the password is over 15 characters, it should return 5.

4. Optionally: Expand the Get-RandomPassword function with a new Optional Switch parameter: AlphaNumericOnly.
This parameter will make sure that the generated password does not contain any special characters.

4. Optionally: Properly document your functions so you can use Get-Help on them.
Use .SYNOPSIS, .DESCRIPTION, .EXAMPLE, and .PARAMETER.

5. Optionally: Decrease the score by 1 point if the password does not contain any special characters.
If the score already is 0, it will remain 0.
TIP: Quick google search on how to do Regular Expressions in Powershell.